{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\React\\\\Routing_Project\\\\frontend\\\\src\\\\pages\\\\EventDetailPage.jsx\",\n  _s = $RefreshSig$();\nimport EventItem from '../components/EventItem';\nimport { json, useRouteLoaderData } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const data = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.id;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport async function action() {\n  fetch;\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["EventItem","json","useRouteLoaderData","jsxDEV","_jsxDEV","EventDetailPage","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","response","fetch","ok","message","status","action","$RefreshReg$"],"sources":["D:/Web Development/React/Routing_Project/frontend/src/pages/EventDetailPage.jsx"],"sourcesContent":["import EventItem from '../components/EventItem';\r\nimport {json, useRouteLoaderData} from 'react-router-dom';\r\n\r\nconst EventDetailPage = () => {\r\n  const data = useRouteLoaderData('event-detail');\r\n  return (\r\n    <EventItem event={data.event}/>\r\n  );\r\n};\r\n\r\nexport default EventDetailPage;\r\n\r\nexport async function loader({request, params}) {\r\n  const id = params.id;\r\n\r\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\r\n\r\n  if(!response.ok){\r\n    throw json({message: 'Could not fetch details for selected event.'}, {\r\n      status: 500\r\n    });\r\n  } else {\r\n    return response;\r\n  }\r\n\r\n}\r\n\r\nexport async function action(){\r\n  fetch\r\n}\r\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAC/C,SAAQC,IAAI,EAAEC,kBAAkB,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,IAAI,GAAGL,kBAAkB,CAAC,cAAc,CAAC;EAC/C,oBACEE,OAAA,CAACJ,SAAS;IAACQ,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAEnC,CAAC;AAACN,EAAA,CALID,eAAe;EAAA,QACNH,kBAAkB;AAAA;AAAAW,EAAA,GAD3BR,eAAe;AAOrB,eAAeA,eAAe;AAE9B,OAAO,eAAeS,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAE;EAC9C,MAAMC,EAAE,GAAGD,MAAM,CAACC,EAAE;EAEpB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGF,EAAE,CAAC;EAElE,IAAG,CAACC,QAAQ,CAACE,EAAE,EAAC;IACd,MAAMnB,IAAI,CAAC;MAACoB,OAAO,EAAE;IAA6C,CAAC,EAAE;MACnEC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AAEF;AAEA,OAAO,eAAeK,MAAMA,CAAA,EAAE;EAC5BJ,KAAK;AACP;AAAC,IAAAN,EAAA;AAAAW,YAAA,CAAAX,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}